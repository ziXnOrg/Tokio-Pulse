name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust:
          - stable
          - beta
          - nightly
          - 1.75.0  # MSRV

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Build
      run: cargo build --all-features --verbose

    - name: Run tests
      run: cargo test --all-features --verbose

    - name: Run tests (no default features)
      run: cargo test --no-default-features --verbose

    - name: Doc tests
      run: cargo test --doc --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt

    - name: Check formatting
      run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: dtolnay/rust-toolchain@stable

    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Generate coverage
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml

    - name: Upload to codecov.io
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions-rust-lang/audit@v1

  miri:
    name: Miri
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: miri

    - name: Run Miri
      run: |
        cd tokio-preempt/tokio-pulse
        cargo miri setup
        cargo miri test --lib

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: dtolnay/rust-toolchain@stable

    - name: Check documentation
      run: cargo doc --all-features --no-deps --document-private-items

    - name: Check for broken links
      run: cargo doc --all-features --no-deps

  msrv:
    name: Minimal Supported Rust Version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: dtolnay/rust-toolchain@1.75.0

    - name: Check MSRV
      run: cargo check --all-features